# -*- coding: utf-8 -*-
"""ppt 전처리파트 시각화(final)-주연.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QqzdRzR6yIvEOIFmtldHH0WPIw1oIAKl
"""

import pandas as pd
import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder,OneHotEncoder

#데이터 로드
import warnings
warnings.filterwarnings('ignore')

# 모든 컬럼 출력설정(선택)
pd.set_option('display.max_columns', None)

# 데이터 로드 &인덱스 제외
df = pd.read_csv('/content/drive/MyDrive/심화프로젝트 ML/train.csv')
df.head(3)

#df :  원본

print('원본 데이터 :', df.shape)

duplicates_all_sorted = duplicates_all.sort_values(by='Surname', ascending=True)

# 정렬된 결과 출력
duplicates_all_sorted

duplicates_all_sorted = duplicates_all.sort_values(by='Surname', ascending=True)

# 정렬된 결과 출력
duplicates_all_sorted

#2. data_preprocessing
# nan_data = df.drop(columns=['id','CustomerId'])
data = nan_data[~nan_data.duplicated()]
print(f"중복 처리 전 :{df.shape}\n중복 처리 :{data.shape}")

#결측치 확인-> 없음
df.isnull().sum()

df[df.isnull().any(axis=1)]

#이상치

plt.boxplot(data['Age'])
plt.ylabel('Age')
plt.title('Age Outlier Detection')
plt.show()

#이상치

plt.boxplot(data['CreditScore'])
plt.ylabel('CreditScore')
plt.title('CreditScore Outlier Detection')
plt.show()

# 스모트 쓰기전후
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.preprocessing import LabelEncoder, OneHotEncoder
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, f1_score, recall_score, precision_score, average_precision_score, roc_auc_score
from imblearn.over_sampling import SMOTE
from sklearn.ensemble import RandomForestClassifier

#obtuna
# 각 모델 정확도를 제외한 모든 수치가 낮아 실사용 불가, optuna를 이용한 튜닝 수행
!pip install --quiet optuna

import optuna
import itertools
import sklearn.svm
import sklearn.model_selection
from sklearn.metrics import classification_report

#평가 AUC
from sklearn.metrics import roc_auc_score

# 데이터 로드 및 전처리
pd.set_option('display.max_columns', None)
df = pd.read_csv('/content/drive/MyDrive/심화프로젝트 ML/train.csv')

print('원본 데이터 :',df.shape)

nan_data = df.drop(columns=['id','CustomerId'])
data = nan_data[~nan_data.duplicated()]
print('중복 처리 :',data.shape)

#check
X = data.drop(columns=['Surname','Exited'],axis=1).reset_index(drop=True)
y_true = data['Exited'].reset_index(drop=True)
print('전처리 완료:',X.shape,y_true.shape)
print('----------------------------')

#encoding : gender-label ( Female = 0, male = 1) /  geography-onehot
le = LabelEncoder()
data['Gender'] = le.fit_transform(data["Gender"])

oe = OneHotEncoder()
oe.fit(data[['Geography']])
geo_csr = oe.transform(data[['Geography']])
csr_df = pd.DataFrame(geo_csr.toarray(), columns = oe.get_feature_names_out())
df = data.reset_index(drop=True)  # df 인덱스 초기화
csr_df = csr_df.reset_index(drop=True)  # csr_df 인덱스 초기화
inco_df = pd.concat([df,csr_df],axis=1)

#check
int_data = inco_df.drop(columns=['Surname','Geography'])
X = int_data.drop("Exited", axis=1)
y_true = int_data['Exited']
print('전처리 완료:',X.shape,y_true.shape)
print('----------------------------')

#4.data engineering
#tester split
X_train, X_test, y_train, y_test = train_test_split(X,y_true,stratify = y_true,test_size = 0.2, random_state= 42)
print('데이터 분리 후 크기 : ',X_train.shape, X_test.shape, y_train.shape, y_test.shape)

#Over Sampling
sm = SMOTE(random_state=42)
X_train_res, y_train_res = sm.fit_resample(X_train, y_train)
print("SMOTE 적용 후 데이터 크기:", X_train_res.shape, y_train_res.shape)
print(f'original : {y_train.value_counts()}')
print(f'smote : {y_train_res.value_counts()}')

print('----------------------------')



# 나눔고딕 폰트 설치
!apt-get update -qq
!apt-get install -qq fonts-nanum

# matplotlib에 폰트 경로 설정
import matplotlib.pyplot as plt
import matplotlib.font_manager as fm
import matplotlib as mpl

# 나눔고딕 폰트 경로 설정
font_path = '/usr/share/fonts/truetype/nanum/NanumGothic.ttf'
fontprop = fm.FontProperties(fname=font_path)

# matplotlib에 글로벌 폰트 설정
mpl.rc('font', family='NanumGothic')

# 폰트가 제대로 설정되었는지 확인
!fc-list | grep "Nanum"

import matplotlib.pyplot as plt
import matplotlib.font_manager as fm

# 나눔고딕 폰트 설정 (코랩 환경)
font_path = '/usr/share/fonts/truetype/nanum/NanumGothic.ttf'
fontprop = fm.FontProperties(fname=font_path)

# 데이터 준비
labels = ['0 (잔존 고객)', '1 (이탈 고객)']
sizes = [130113, 34921]  # 각 클래스의 수
colors = ['skyblue', 'salmon']  # 색상 지정
explode = (0.05, 0)  # 이탈 고객 비율을 강조하기 위해 분리

# 파이차트 생성
plt.figure(figsize=(8, 6))
plt.pie(sizes, labels=labels, autopct='%1.1f%%', colors=colors, explode=explode, startangle=90,
        textprops={'fontproperties': fontprop, 'fontsize': 20})  # 표 안 글씨 크기 설정
plt.title('고객 이탈 여부 클래스 분포', fontproperties=fontprop, fontsize=20)  # 제목 글씨 크기 설정
plt.show()